generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id    String @id @default(cuid())
  name  String
  value String @unique

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  users User[]

  @@map("roles")
}

model User {
  id     String @id @default(cuid())
  name   String
  email  String @unique
  role   Role   @relation(fields: [roleId], references: [id])
  roleId String @map("role_id")
  rooms  RoomUsers[]

  createdAt  DateTime    @default(now()) @map("created_at")
  updatedAt  DateTime    @updatedAt @map("updated_at")
  verifiedAt DateTime?   @map("verified_at")

  @@map("users")
}

model RoomUsers {
  id String @id @default(cuid())
  userId    String @map("user_id")
  user User @relation(fields: [userId], references: [id])
  roomId    String @map("room_id")
  room Room @relation(fields: [roomId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("room_users")
}

model Room {
  id   String @id @default(cuid())
  name String

  messages Message[]
  users RoomUsers[]

  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @updatedAt @map("updated_at")

  @@map("rooms")
}

model Message {
  id      String @id @default(cuid())
  content String
  Room    Room   @relation(fields: [roomId], references: [id])
  roomId  String @map("room_id")
  userId  String @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("messages")
}
